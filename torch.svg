<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.31%)</title><rect x="97.4" y="101" width="3.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="100.41" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.93%)</title><rect x="1062.5" y="245" width="11.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1065.53" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.31%)</title><rect x="1128.1" y="245" width="3.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1131.09" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall (17 samples, 5.25%)</title><rect x="184.8" y="181" width="61.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="187.81" y="191.5" >syscal..</text>
</g>
<g >
<title>syscall.Read (17 samples, 5.25%)</title><rect x="184.8" y="213" width="61.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="187.81" y="223.5" >syscal..</text>
</g>
<g >
<title>runtime.semasleep (57 samples, 17.59%)</title><rect x="490.7" y="213" width="207.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="493.74" y="223.5" >runtime.semasleep</text>
</g>
<g >
<title>syscall.syscall (22 samples, 6.79%)</title><rect x="257.7" y="197" width="80.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="260.65" y="207.5" >syscall.s..</text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.31%)</title><rect x="341.4" y="149" width="3.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="344.42" y="159.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (1 samples, 0.31%)</title><rect x="97.4" y="69" width="3.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="100.41" y="79.5" ></text>
</g>
<g >
<title>net.(*netFD).connect (10 samples, 3.09%)</title><rect x="97.4" y="117" width="36.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="100.41" y="127.5" >net..</text>
</g>
<g >
<title>crypto/rand.(*reader).Read (8 samples, 2.47%)</title><rect x="10.0" y="245" width="29.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >cr..</text>
</g>
<g >
<title>runtime.runqgrab (7 samples, 2.16%)</title><rect x="1022.5" y="213" width="25.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1025.47" y="223.5" >r..</text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.93%)</title><rect x="348.7" y="277" width="10.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="351.70" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.31%)</title><rect x="345.1" y="293" width="3.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="348.06" y="303.5" ></text>
</g>
<g >
<title>runtime.mPark (13 samples, 4.01%)</title><rect x="366.9" y="245" width="47.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="369.91" y="255.5" >runt..</text>
</g>
<g >
<title>runtime.goexit0 (34 samples, 10.49%)</title><rect x="359.6" y="293" width="123.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="362.63" y="303.5" >runtime.goexit0</text>
</g>
<g >
<title>syscall.connect (4 samples, 1.23%)</title><rect x="101.0" y="85" width="14.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="104.05" y="95.5" ></text>
</g>
<g >
<title>syscall.syscall6 (1 samples, 0.31%)</title><rect x="166.6" y="101" width="3.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="169.60" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.31%)</title><rect x="487.1" y="213" width="3.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="490.10" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (1 samples, 0.31%)</title><rect x="341.4" y="245" width="3.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="344.42" y="255.5" ></text>
</g>
<g >
<title>net.newTCPConn (4 samples, 1.23%)</title><rect x="166.6" y="165" width="14.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="169.60" y="175.5" ></text>
</g>
<g >
<title>syscall.getsockname (2 samples, 0.62%)</title><rect x="133.8" y="101" width="7.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="136.83" y="111.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.31%)</title><rect x="1048.0" y="245" width="3.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1050.96" y="255.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.31%)</title><rect x="1018.8" y="245" width="3.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1021.83" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.93%)</title><rect x="1062.5" y="197" width="11.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1065.53" y="207.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.31%)</title><rect x="1073.5" y="213" width="3.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1076.46" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.93%)</title><rect x="1062.5" y="181" width="11.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1065.53" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.31%)</title><rect x="1128.1" y="213" width="3.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1131.09" y="223.5" ></text>
</g>
<g >
<title>net.(*conn).Close (1 samples, 0.31%)</title><rect x="181.2" y="245" width="3.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="184.17" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall (2 samples, 0.62%)</title><rect x="141.1" y="85" width="7.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="144.11" y="95.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).readLoop.func1 (3 samples, 0.93%)</title><rect x="246.7" y="293" width="11.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="249.73" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.31%)</title><rect x="79.2" y="229" width="3.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="82.20" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (13 samples, 4.01%)</title><rect x="1135.4" y="197" width="47.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1138.37" y="207.5" >runt..</text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.31%)</title><rect x="97.4" y="85" width="3.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="100.41" y="95.5" ></text>
</g>
<g >
<title>net/http.(*Transport).dialConn (24 samples, 7.41%)</title><rect x="93.8" y="293" width="87.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="96.77" y="303.5" >net/http.(..</text>
</g>
<g >
<title>runtime.semawakeup (5 samples, 1.54%)</title><rect x="1080.7" y="261" width="18.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1083.74" y="271.5" ></text>
</g>
<g >
<title>syscall.Connect (4 samples, 1.23%)</title><rect x="101.0" y="101" width="14.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="104.05" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.31%)</title><rect x="90.1" y="229" width="3.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="93.12" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (1 samples, 0.31%)</title><rect x="181.2" y="213" width="3.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="184.17" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.93%)</title><rect x="1062.5" y="213" width="11.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1065.53" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (31 samples, 9.57%)</title><rect x="1077.1" y="309" width="112.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1080.10" y="319.5" >runtime.syste..</text>
</g>
<g >
<title>runtime.gcDrain (7 samples, 2.16%)</title><rect x="1099.0" y="277" width="25.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1101.95" y="287.5" >r..</text>
</g>
<g >
<title>runtime.readyWithTime.goready.func1 (1 samples, 0.31%)</title><rect x="1128.1" y="293" width="3.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1131.09" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.31%)</title><rect x="79.2" y="213" width="3.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="82.20" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.31%)</title><rect x="345.1" y="229" width="3.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="348.06" y="239.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.31%)</title><rect x="1128.1" y="277" width="3.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1131.09" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.31%)</title><rect x="1124.4" y="197" width="3.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1127.44" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.31%)</title><rect x="1077.1" y="197" width="3.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1080.10" y="207.5" ></text>
</g>
<g >
<title>runtime.findRunnable (34 samples, 10.49%)</title><rect x="359.6" y="261" width="123.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="362.63" y="271.5" >runtime.findRun..</text>
</g>
<g >
<title>runtime.send.goready.func1 (15 samples, 4.63%)</title><rect x="1135.4" y="293" width="54.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1138.37" y="303.5" >runti..</text>
</g>
<g >
<title>runtime.startm (1 samples, 0.31%)</title><rect x="1077.1" y="245" width="3.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1080.10" y="255.5" ></text>
</g>
<g >
<title>runtime.selunlock (1 samples, 0.31%)</title><rect x="337.8" y="277" width="3.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="340.78" y="287.5" ></text>
</g>
<g >
<title>net/http.(*Transport).RoundTrip (1 samples, 0.31%)</title><rect x="82.8" y="245" width="3.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="85.84" y="255.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.31%)</title><rect x="90.1" y="245" width="3.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="93.12" y="255.5" ></text>
</g>
<g >
<title>net.setNoDelay (3 samples, 0.93%)</title><rect x="170.2" y="149" width="11.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="173.25" y="159.5" ></text>
</g>
<g >
<title>net.(*sysDialer).doDialTCPProto (23 samples, 7.10%)</title><rect x="97.4" y="181" width="83.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="100.41" y="191.5" >net.(*sys..</text>
</g>
<g >
<title>net/http.send (1 samples, 0.31%)</title><rect x="82.8" y="261" width="3.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="85.84" y="271.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.93%)</title><rect x="1062.5" y="229" width="11.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1065.53" y="239.5" ></text>
</g>
<g >
<title>runtime.kevent (19 samples, 5.86%)</title><rect x="414.3" y="229" width="69.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="417.26" y="239.5" >runtime..</text>
</g>
<g >
<title>runtime.stealWork (7 samples, 2.16%)</title><rect x="1022.5" y="245" width="25.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1025.47" y="255.5" >r..</text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.93%)</title><rect x="348.7" y="261" width="10.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="351.70" y="271.5" ></text>
</g>
<g >
<title>syscall.setsockopt (3 samples, 0.93%)</title><rect x="170.2" y="117" width="11.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="173.25" y="127.5" ></text>
</g>
<g >
<title>syscall.Close (1 samples, 0.31%)</title><rect x="181.2" y="165" width="3.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="184.17" y="175.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).close (3 samples, 0.93%)</title><rect x="246.7" y="277" width="11.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="249.73" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.31%)</title><rect x="1124.4" y="213" width="3.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1127.44" y="223.5" ></text>
</g>
<g >
<title>runtime.save_g (1 samples, 0.31%)</title><rect x="1131.7" y="293" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1134.73" y="303.5" ></text>
</g>
<g >
<title>syscall.read (17 samples, 5.25%)</title><rect x="184.8" y="197" width="61.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="187.81" y="207.5" >syscal..</text>
</g>
<g >
<title>crypto/rand.init.0.batched.func1 (8 samples, 2.47%)</title><rect x="10.0" y="229" width="29.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >cr..</text>
</g>
<g >
<title>net.setKeepAlivePeriod (1 samples, 0.31%)</title><rect x="166.6" y="149" width="3.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="169.60" y="159.5" ></text>
</g>
<g >
<title>runtime.write (1 samples, 0.31%)</title><rect x="1015.2" y="229" width="3.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1018.19" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.31%)</title><rect x="79.2" y="261" width="3.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.20" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (17 samples, 5.25%)</title><rect x="184.8" y="229" width="61.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="187.81" y="239.5" >net.(*..</text>
</g>
<g >
<title>runtime.lockWithRank (4 samples, 1.23%)</title><rect x="1048.0" y="261" width="14.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1050.96" y="271.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.31%)</title><rect x="79.2" y="133" width="3.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.20" y="143.5" ></text>
</g>
<g >
<title>io.ReadFull (8 samples, 2.47%)</title><rect x="10.0" y="277" width="29.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >io..</text>
</g>
<g >
<title>net.(*sysDialer).dialSerial (23 samples, 7.10%)</title><rect x="97.4" y="229" width="83.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="100.41" y="239.5" >net.(*sys..</text>
</g>
<g >
<title>net/http.(*Client).send (1 samples, 0.31%)</title><rect x="82.8" y="277" width="3.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="85.84" y="287.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (8 samples, 2.47%)</title><rect x="10.0" y="261" width="29.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >io..</text>
</g>
<g >
<title>net.(*sysDialer).doDialTCP (23 samples, 7.10%)</title><rect x="97.4" y="197" width="83.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="100.41" y="207.5" >net.(*sys..</text>
</g>
<g >
<title>time.Now (1 samples, 0.31%)</title><rect x="82.8" y="181" width="3.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="85.84" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.31%)</title><rect x="487.1" y="181" width="3.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="490.10" y="191.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).closeLocked (3 samples, 0.93%)</title><rect x="246.7" y="261" width="11.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="249.73" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Close (3 samples, 0.93%)</title><rect x="246.7" y="229" width="11.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="249.73" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.31%)</title><rect x="1124.4" y="277" width="3.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1127.44" y="287.5" ></text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.31%)</title><rect x="487.1" y="245" width="3.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="490.10" y="255.5" ></text>
</g>
<g >
<title>runtime.mPark (57 samples, 17.59%)</title><rect x="490.7" y="245" width="207.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="493.74" y="255.5" >runtime.mPark</text>
</g>
<g >
<title>bufio.NewReaderSize (2 samples, 0.62%)</title><rect x="86.5" y="293" width="7.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="89.48" y="303.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetEntropy (10 samples, 3.09%)</title><rect x="42.8" y="197" width="36.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="45.78" y="207.5" >int..</text>
</g>
<g >
<title>bufio.(*Reader).fill (17 samples, 5.25%)</title><rect x="184.8" y="277" width="61.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="187.81" y="287.5" >bufio...</text>
</g>
<g >
<title>syscall.Write (22 samples, 6.79%)</title><rect x="257.7" y="229" width="80.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="260.65" y="239.5" >syscall.W..</text>
</g>
<g >
<title>net/http.(*Transport).dial (24 samples, 7.41%)</title><rect x="93.8" y="277" width="87.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="96.77" y="287.5" >net/http.(..</text>
</g>
<g >
<title>net.(*sysDialer).dialSingle (23 samples, 7.10%)</title><rect x="97.4" y="213" width="83.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="100.41" y="223.5" >net.(*sys..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.31%)</title><rect x="90.1" y="277" width="3.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="93.12" y="287.5" ></text>
</g>
<g >
<title>net/http.(*Transport).queueForIdleConn (1 samples, 0.31%)</title><rect x="82.8" y="197" width="3.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="85.84" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.31%)</title><rect x="1073.5" y="229" width="3.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1076.46" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.62%)</title><rect x="359.6" y="245" width="7.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="362.63" y="255.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.31%)</title><rect x="345.1" y="197" width="3.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="348.06" y="207.5" ></text>
</g>
<g >
<title>syscall.getsockopt (4 samples, 1.23%)</title><rect x="119.3" y="85" width="14.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="122.26" y="95.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.31%)</title><rect x="1077.1" y="261" width="3.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1080.10" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.31%)</title><rect x="345.1" y="245" width="3.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="348.06" y="255.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (1 samples, 0.31%)</title><rect x="341.4" y="85" width="3.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="344.42" y="95.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.93%)</title><rect x="1051.6" y="245" width="10.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1054.60" y="255.5" ></text>
</g>
<g >
<title>runtime.(*limiterEvent).stop (1 samples, 0.31%)</title><rect x="1018.8" y="229" width="3.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1021.83" y="239.5" ></text>
</g>
<g >
<title>github.com/google/uuid.New (11 samples, 3.40%)</title><rect x="39.1" y="293" width="40.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="42.14" y="303.5" >git..</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.31%)</title><rect x="79.2" y="149" width="3.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="82.20" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.31%)</title><rect x="79.2" y="197" width="3.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="82.20" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.31%)</title><rect x="1077.1" y="277" width="3.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1080.10" y="287.5" ></text>
</g>
<g >
<title>syscall.syscall6 (4 samples, 1.23%)</title><rect x="119.3" y="69" width="14.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="122.26" y="79.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.31%)</title><rect x="1128.1" y="261" width="3.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1131.09" y="271.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (1 samples, 0.31%)</title><rect x="487.1" y="229" width="3.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="490.10" y="239.5" ></text>
</g>
<g >
<title>syscall.syscall6 (3 samples, 0.93%)</title><rect x="170.2" y="101" width="11.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="173.25" y="111.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.31%)</title><rect x="341.4" y="101" width="3.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="344.42" y="111.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.31%)</title><rect x="1073.5" y="309" width="3.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1076.46" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.31%)</title><rect x="341.4" y="261" width="3.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="344.42" y="271.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.93%)</title><rect x="1062.5" y="261" width="11.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1065.53" y="271.5" ></text>
</g>
<g >
<title>net.internetSocket (19 samples, 5.86%)</title><rect x="97.4" y="165" width="69.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="100.41" y="175.5" >net.int..</text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (1 samples, 0.31%)</title><rect x="345.1" y="277" width="3.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="348.06" y="287.5" ></text>
</g>
<g >
<title>github.com/google/uuid.NewRandom (11 samples, 3.40%)</title><rect x="39.1" y="277" width="40.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="42.14" y="287.5" >git..</text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.31%)</title><rect x="487.1" y="165" width="3.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="490.10" y="175.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (1 samples, 0.31%)</title><rect x="345.1" y="181" width="3.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="348.06" y="191.5" ></text>
</g>
<g >
<title>syscall.socket (4 samples, 1.23%)</title><rect x="148.4" y="101" width="14.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="151.40" y="111.5" ></text>
</g>
<g >
<title>syscall.Getpeername (1 samples, 0.31%)</title><rect x="115.6" y="101" width="3.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="118.62" y="111.5" ></text>
</g>
<g >
<title>syscall.syscall (3 samples, 0.93%)</title><rect x="246.7" y="149" width="11.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="249.73" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.31%)</title><rect x="341.4" y="181" width="3.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="344.42" y="191.5" ></text>
</g>
<g >
<title>syscall.GetsockoptInt (4 samples, 1.23%)</title><rect x="119.3" y="101" width="14.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="122.26" y="111.5" ></text>
</g>
<g >
<title>net.sysSocket (6 samples, 1.85%)</title><rect x="141.1" y="133" width="21.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="144.11" y="143.5" >n..</text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.31%)</title><rect x="1048.0" y="213" width="3.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1050.96" y="223.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.31%)</title><rect x="79.2" y="245" width="3.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="82.20" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.93%)</title><rect x="348.7" y="229" width="10.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="351.70" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.31%)</title><rect x="1128.1" y="229" width="3.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1131.09" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.31%)</title><rect x="345.1" y="213" width="3.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="348.06" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (57 samples, 17.59%)</title><rect x="490.7" y="197" width="207.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="493.74" y="207.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>runtime.notesleep (57 samples, 17.59%)</title><rect x="490.7" y="229" width="207.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="493.74" y="239.5" >runtime.notesleep</text>
</g>
<g >
<title>net/http.(*Transport).putOrCloseIdleConn (1 samples, 0.31%)</title><rect x="181.2" y="293" width="3.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="184.17" y="303.5" ></text>
</g>
<g >
<title>net.socket (19 samples, 5.86%)</title><rect x="97.4" y="149" width="69.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="100.41" y="159.5" >net.soc..</text>
</g>
<g >
<title>net.(*sysDialer).dialParallel (23 samples, 7.10%)</title><rect x="97.4" y="245" width="83.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="100.41" y="255.5" >net.(*sys..</text>
</g>
<g >
<title>runtime.(*scavChunkData).free (1 samples, 0.31%)</title><rect x="341.4" y="69" width="3.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="344.42" y="79.5" ></text>
</g>
<g >
<title>runtime.semawakeup (15 samples, 4.63%)</title><rect x="1135.4" y="213" width="54.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1138.37" y="223.5" >runti..</text>
</g>
<g >
<title>net/http.(*persistConn).close (1 samples, 0.31%)</title><rect x="181.2" y="277" width="3.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="184.17" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.31%)</title><rect x="79.2" y="277" width="3.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="82.20" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.31%)</title><rect x="1077.1" y="229" width="3.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1080.10" y="239.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.31%)</title><rect x="82.8" y="149" width="3.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="85.84" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.31%)</title><rect x="90.1" y="261" width="3.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="93.12" y="271.5" ></text>
</g>
<g >
<title>runtime.park_m (162 samples, 50.00%)</title><rect x="483.5" y="293" width="590.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="486.46" y="303.5" >runtime.park_m</text>
</g>
<g >
<title>syscall.SetNonblock (2 samples, 0.62%)</title><rect x="141.1" y="117" width="7.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="144.11" y="127.5" ></text>
</g>
<g >
<title>runtime.notewakeup (5 samples, 1.54%)</title><rect x="1080.7" y="277" width="18.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1083.74" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.93%)</title><rect x="1051.6" y="229" width="10.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1054.60" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (3 samples, 0.93%)</title><rect x="246.7" y="197" width="11.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="249.73" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.31%)</title><rect x="1124.4" y="229" width="3.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1127.44" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.31%)</title><rect x="345.1" y="261" width="3.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="348.06" y="271.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).writeLoop (23 samples, 7.10%)</title><rect x="257.7" y="309" width="83.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="260.65" y="319.5" >net/http...</text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.31%)</title><rect x="1095.3" y="245" width="3.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1098.31" y="255.5" ></text>
</g>
<g >
<title>github.com/google/uuid.New (8 samples, 2.47%)</title><rect x="10.0" y="309" width="29.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >gi..</text>
</g>
<g >
<title>runtime.startm (15 samples, 4.63%)</title><rect x="1135.4" y="245" width="54.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1138.37" y="255.5" >runti..</text>
</g>
<g >
<title>internal/poll.(*SysFile).destroy (3 samples, 0.93%)</title><rect x="246.7" y="181" width="11.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="249.73" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (1 samples, 0.31%)</title><rect x="1124.4" y="293" width="3.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1127.44" y="303.5" ></text>
</g>
<g >
<title>syscall.rawSyscall (2 samples, 0.62%)</title><rect x="133.8" y="85" width="7.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="136.83" y="95.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (4 samples, 1.23%)</title><rect x="1080.7" y="245" width="14.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1083.74" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall (8 samples, 2.47%)</title><rect x="10.0" y="197" width="29.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >sy..</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.31%)</title><rect x="487.1" y="197" width="3.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="490.10" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.93%)</title><rect x="348.7" y="245" width="10.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="351.70" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.31%)</title><rect x="163.0" y="101" width="3.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="165.96" y="111.5" ></text>
</g>
<g >
<title>runtime.netpoll (7 samples, 2.16%)</title><rect x="1099.0" y="245" width="25.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1101.95" y="255.5" >r..</text>
</g>
<g >
<title>runtime.findRunnable (154 samples, 47.53%)</title><rect x="487.1" y="261" width="560.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="490.10" y="271.5" >runtime.findRunnable</text>
</g>
<g >
<title>runtime.exitsyscall0 (3 samples, 0.93%)</title><rect x="348.7" y="293" width="10.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="351.70" y="303.5" ></text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.31%)</title><rect x="163.0" y="117" width="3.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="165.96" y="127.5" ></text>
</g>
<g >
<title>runtime.ready (15 samples, 4.63%)</title><rect x="1135.4" y="277" width="54.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1138.37" y="287.5" >runti..</text>
</g>
<g >
<title>net.(*conn).Read (17 samples, 5.25%)</title><rect x="184.8" y="245" width="61.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="187.81" y="255.5" >net.(*..</text>
</g>
<g >
<title>io.ReadAtLeast (11 samples, 3.40%)</title><rect x="39.1" y="245" width="40.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="42.14" y="255.5" >io...</text>
</g>
<g >
<title>github.com/google/uuid.NewRandom (8 samples, 2.47%)</title><rect x="10.0" y="293" width="29.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >gi..</text>
</g>
<g >
<title>runtime.wakep (15 samples, 4.63%)</title><rect x="1135.4" y="261" width="54.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1138.37" y="271.5" >runti..</text>
</g>
<g >
<title>crypto/rand.init.0.batched.func1 (10 samples, 3.09%)</title><rect x="42.8" y="213" width="36.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="45.78" y="223.5" >cry..</text>
</g>
<g >
<title>syscall.syscall (10 samples, 3.09%)</title><rect x="42.8" y="181" width="36.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="45.78" y="191.5" >sys..</text>
</g>
<g >
<title>net/http.(*Transport).getConn (1 samples, 0.31%)</title><rect x="82.8" y="213" width="3.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="85.84" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.62%)</title><rect x="359.6" y="213" width="7.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="362.63" y="223.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.31%)</title><rect x="341.4" y="229" width="3.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="344.42" y="239.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (17 samples, 5.25%)</title><rect x="184.8" y="293" width="61.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="187.81" y="303.5" >bufio...</text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.31%)</title><rect x="341.4" y="277" width="3.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="344.42" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (13 samples, 4.01%)</title><rect x="366.9" y="213" width="47.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="369.91" y="223.5" >runt..</text>
</g>
<g >
<title>internal/poll.(*SysFile).destroy (1 samples, 0.31%)</title><rect x="181.2" y="181" width="3.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="184.17" y="191.5" ></text>
</g>
<g >
<title>syscall.write (22 samples, 6.79%)</title><rect x="257.7" y="213" width="80.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="260.65" y="223.5" >syscall.w..</text>
</g>
<g >
<title>github.com/huiming23344/balanceapi/routers/api/onePass.getPay (1 samples, 0.31%)</title><rect x="79.2" y="309" width="3.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="82.20" y="319.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.31%)</title><rect x="181.2" y="149" width="3.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="184.17" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (7 samples, 2.16%)</title><rect x="1099.0" y="293" width="25.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1101.95" y="303.5" >r..</text>
</g>
<g >
<title>runtime.write1 (1 samples, 0.31%)</title><rect x="1015.2" y="213" width="3.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1018.19" y="223.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (1 samples, 0.31%)</title><rect x="1015.2" y="245" width="3.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1018.19" y="255.5" ></text>
</g>
<g >
<title>net/http.(*Client).do (1 samples, 0.31%)</title><rect x="82.8" y="293" width="3.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="85.84" y="303.5" ></text>
</g>
<g >
<title>all (324 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>runtime.kevent (7 samples, 2.16%)</title><rect x="1099.0" y="229" width="25.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1101.95" y="239.5" >r..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.31%)</title><rect x="86.5" y="245" width="3.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="89.48" y="255.5" ></text>
</g>
<g >
<title>net/http.(*Transport).roundTrip (1 samples, 0.31%)</title><rect x="82.8" y="229" width="3.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="85.84" y="239.5" ></text>
</g>
<g >
<title>net/http.(*Transport).dialConnFor (27 samples, 8.33%)</title><rect x="86.5" y="309" width="98.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="89.48" y="319.5" >net/http.(*..</text>
</g>
<g >
<title>runtime.schedule (162 samples, 50.00%)</title><rect x="483.5" y="277" width="590.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="486.46" y="287.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.gcBgMarkWorker (2 samples, 0.62%)</title><rect x="341.4" y="309" width="7.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="344.42" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 1.85%)</title><rect x="1026.1" y="197" width="21.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1029.11" y="207.5" >r..</text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.31%)</title><rect x="181.2" y="197" width="3.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="184.17" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.31%)</title><rect x="341.4" y="165" width="3.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="344.42" y="175.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.31%)</title><rect x="1124.4" y="245" width="3.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1127.44" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.31%)</title><rect x="1077.1" y="213" width="3.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1080.10" y="223.5" ></text>
</g>
<g >
<title>syscall.rawSyscall (1 samples, 0.31%)</title><rect x="115.6" y="69" width="3.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="118.62" y="79.5" ></text>
</g>
<g >
<title>syscall.Socket (4 samples, 1.23%)</title><rect x="148.4" y="117" width="14.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="151.40" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (13 samples, 4.01%)</title><rect x="366.9" y="197" width="47.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="369.91" y="207.5" >runt..</text>
</g>
<g >
<title>syscall.CloseOnExec (1 samples, 0.31%)</title><rect x="163.0" y="133" width="3.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="165.96" y="143.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.31%)</title><rect x="1048.0" y="229" width="3.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1050.96" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.31%)</title><rect x="1073.5" y="261" width="3.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1076.46" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).dial (12 samples, 3.70%)</title><rect x="97.4" y="133" width="43.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="100.41" y="143.5" >net...</text>
</g>
<g >
<title>runtime.netpollopen (1 samples, 0.31%)</title><rect x="97.4" y="53" width="3.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="100.41" y="63.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (1 samples, 0.31%)</title><rect x="166.6" y="133" width="3.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="169.60" y="143.5" ></text>
</g>
<g >
<title>net.(*conn).Write (22 samples, 6.79%)</title><rect x="257.7" y="261" width="80.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="260.65" y="271.5" >net.(*con..</text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.31%)</title><rect x="79.2" y="165" width="3.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="82.20" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (15 samples, 4.63%)</title><rect x="1135.4" y="229" width="54.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1138.37" y="239.5" >runti..</text>
</g>
<g >
<title>io.ReadAll (1 samples, 0.31%)</title><rect x="79.2" y="293" width="3.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="82.20" y="303.5" ></text>
</g>
<g >
<title>runtime.closechan.goready.func1 (1 samples, 0.31%)</title><rect x="1077.1" y="293" width="3.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1080.10" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (34 samples, 10.49%)</title><rect x="359.6" y="277" width="123.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="362.63" y="287.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.mcall (199 samples, 61.42%)</title><rect x="348.7" y="309" width="724.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="351.70" y="319.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.runqsteal (7 samples, 2.16%)</title><rect x="1022.5" y="229" width="25.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1025.47" y="239.5" >r..</text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.31%)</title><rect x="341.4" y="293" width="3.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="344.42" y="303.5" ></text>
</g>
<g >
<title>runtime.notesleep (13 samples, 4.01%)</title><rect x="366.9" y="229" width="47.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="369.91" y="239.5" >runt..</text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.62%)</title><rect x="359.6" y="229" width="7.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="362.63" y="239.5" ></text>
</g>
<g >
<title>runtime.kevent (87 samples, 26.85%)</title><rect x="698.3" y="229" width="316.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="701.33" y="239.5" >runtime.kevent</text>
</g>
<g >
<title>time.now (1 samples, 0.31%)</title><rect x="82.8" y="165" width="3.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="85.84" y="175.5" ></text>
</g>
<g >
<title>syscall.Getsockname (2 samples, 0.62%)</title><rect x="133.8" y="117" width="7.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="136.83" y="127.5" ></text>
</g>
<g >
<title>runtime.netpoll (19 samples, 5.86%)</title><rect x="414.3" y="245" width="69.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="417.26" y="255.5" >runtime..</text>
</g>
<g >
<title>syscall.syscall (4 samples, 1.23%)</title><rect x="101.0" y="69" width="14.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="104.05" y="79.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.31%)</title><rect x="337.8" y="293" width="3.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="340.78" y="303.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.31%)</title><rect x="97.4" y="37" width="3.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="100.41" y="47.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (5 samples, 1.54%)</title><rect x="1080.7" y="293" width="18.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1083.74" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (22 samples, 6.79%)</title><rect x="257.7" y="245" width="80.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="260.65" y="255.5" >net.(*net..</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.31%)</title><rect x="341.4" y="213" width="3.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="344.42" y="223.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).readLoop (20 samples, 6.17%)</title><rect x="184.8" y="309" width="72.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="187.81" y="319.5" >net/http..</text>
</g>
<g >
<title>runtime.pollWork (7 samples, 2.16%)</title><rect x="1099.0" y="261" width="25.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1101.95" y="271.5" >r..</text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.31%)</title><rect x="1124.4" y="261" width="3.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1127.44" y="271.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (22 samples, 6.79%)</title><rect x="257.7" y="293" width="80.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="260.65" y="303.5" >bufio.(*W..</text>
</g>
<g >
<title>internal/poll.(*FD).Close (3 samples, 0.93%)</title><rect x="246.7" y="213" width="11.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="249.73" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.62%)</title><rect x="1182.7" y="197" width="7.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1185.72" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.31%)</title><rect x="86.5" y="261" width="3.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="89.48" y="271.5" ></text>
</g>
<g >
<title>github.com/huiming23344/balanceapi/routers/api/onePass.getAllOneAmount.func1 (11 samples, 3.40%)</title><rect x="39.1" y="309" width="40.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="42.14" y="319.5" >git..</text>
</g>
<g >
<title>net/http.persistConnWriter.Write (22 samples, 6.79%)</title><rect x="257.7" y="277" width="80.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="260.65" y="287.5" >net/http...</text>
</g>
<g >
<title>net.(*Dialer).DialContext (24 samples, 7.41%)</title><rect x="93.8" y="261" width="87.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="96.77" y="271.5" >net.(*Dial..</text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.31%)</title><rect x="1073.5" y="293" width="3.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1076.46" y="303.5" ></text>
</g>
<g >
<title>runtime.netpoll (87 samples, 26.85%)</title><rect x="698.3" y="245" width="316.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="701.33" y="255.5" >runtime.netpoll</text>
</g>
<g >
<title>net.(*netFD).Close (1 samples, 0.31%)</title><rect x="181.2" y="229" width="3.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="184.17" y="239.5" ></text>
</g>
<g >
<title>syscall.fcntl (2 samples, 0.62%)</title><rect x="141.1" y="101" width="7.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="144.11" y="111.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).closeLocked (1 samples, 0.31%)</title><rect x="181.2" y="261" width="3.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="184.17" y="271.5" ></text>
</g>
<g >
<title>syscall.Close (3 samples, 0.93%)</title><rect x="246.7" y="165" width="11.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="249.73" y="175.5" ></text>
</g>
<g >
<title>io.ReadFull (11 samples, 3.40%)</title><rect x="39.1" y="261" width="40.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="42.14" y="271.5" >io...</text>
</g>
<g >
<title>internal/syscall/unix.GetEntropy (8 samples, 2.47%)</title><rect x="10.0" y="213" width="29.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >in..</text>
</g>
<g >
<title>net.(*conn).Close (3 samples, 0.93%)</title><rect x="246.7" y="245" width="11.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="249.73" y="255.5" ></text>
</g>
<g >
<title>syscall.rawSyscall (4 samples, 1.23%)</title><rect x="148.4" y="85" width="14.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="151.40" y="95.5" ></text>
</g>
<g >
<title>net/http.(*Client).Do (1 samples, 0.31%)</title><rect x="82.8" y="309" width="3.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="85.84" y="319.5" ></text>
</g>
<g >
<title>syscall.getpeername (1 samples, 0.31%)</title><rect x="115.6" y="85" width="3.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="118.62" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.31%)</title><rect x="341.4" y="117" width="3.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="344.42" y="127.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).Read (17 samples, 5.25%)</title><rect x="184.8" y="261" width="61.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="187.81" y="271.5" >net/ht..</text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.31%)</title><rect x="341.4" y="197" width="3.7" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="344.42" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.31%)</title><rect x="79.2" y="181" width="3.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="82.20" y="191.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (3 samples, 0.93%)</title><rect x="170.2" y="133" width="11.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="173.25" y="143.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.31%)</title><rect x="341.4" y="133" width="3.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="344.42" y="143.5" ></text>
</g>
<g >
<title>syscall.setsockopt (1 samples, 0.31%)</title><rect x="166.6" y="117" width="3.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="169.60" y="127.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.31%)</title><rect x="1073.5" y="245" width="3.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1076.46" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.31%)</title><rect x="86.5" y="277" width="3.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="89.48" y="287.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.31%)</title><rect x="1073.5" y="277" width="3.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1076.46" y="287.5" ></text>
</g>
<g >
<title>crypto/rand.(*reader).Read (11 samples, 3.40%)</title><rect x="39.1" y="229" width="40.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="42.14" y="239.5" >cry..</text>
</g>
</g>
</svg>
